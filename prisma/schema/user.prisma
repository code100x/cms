model User {
  id                String             @id @default(cuid())
  name              String?
  email             String?            @unique
  token             String?
  sessions          Session[]
  purchases         UserPurchases[]
  videoProgress     VideoProgress[]
  comments          Comment[]
  votes             Vote[]
  discordConnect    DiscordConnect?
  disableDrm        Boolean            @default(false)
  bunnyProxyEnabled Boolean            @default(false)
  bookmarks         Bookmark[]
  password          String?
  appxUserId        String?
  appxUsername      String?
  appxAuthToken     String?
  questions         Question[]
  answers           Answer[]
  certificate       Certificate[]
  upiIds            UpiId[]            @relation("UserUpiIds")
  solanaAddresses   SolanaAddress[]    @relation("UserSolanaAddresses")
  githubUser        GitHubLink?        @relation("UserGithub")
  bounties          BountySubmission[]
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model DiscordConnect {
  id        String @id @default(cuid())
  username  String
  discordId String @unique
  userId    String @unique
  user      User   @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model DiscordConnectBulk {
  id        String @id @default(cuid())
  username  String
  discordId String
  userId    String
  cohortId  String @default("")
}

model GitHubLink {
  id           String   @id @default(cuid())
  userId       String   @unique
  user         User     @relation("UserGithub", fields: [userId], references: [id], onDelete: Cascade)
  githubId     String
  username     String
  avatarUrl    String?
  access_token String
  profileUrl   String?
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
}

model UpiId {
  id     Int    @id @default(autoincrement())
  value  String @db.VarChar(256)
  userId String
  user   User   @relation("UserUpiIds", fields: [userId], references: [id])

  @@unique([userId, value])
}

model SolanaAddress {
  id     Int    @id @default(autoincrement())
  value  String @db.Char(44)
  userId String
  user   User   @relation("UserSolanaAddresses", fields: [userId], references: [id])

  @@unique([userId, value])
}
